name: on-container-cicd

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tags:
        description: 'Set Tags Name'
        required: true
        default: main

env:
  SPRING_APP_NAME: dev-tribe-api-server
  SPRING_APP_VERSION: ${{ github.sha }}


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.inputs.tags }}'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradlew
        run: ./gradlew clean bootJar
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Spring Boot Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USER_NAME }}/${{ env.SPRING_APP_NAME }}:${{ env.SPRING_APP_VERSION }}
            ${{ secrets.DOCKERHUB_USER_NAME }}/${{ env.SPRING_APP_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  run-docker-image-on-gcp:
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.inputs.tags }}'

      - name: Prepare docker-compose.dev.yml and .env
        run: |
          mkdir -p deploy
          cp ./docker/compose/docker-compose.dev.yml deploy/
          cat <<EOF > deploy/.env
          
          # Docker Registry
          DOCKER_REGISTRY=${{ secrets.DOCKERHUB_USER_NAME }}/${{ env.SPRING_APP_NAME }}
          SPRING_APP_NAME=${{ env.SPRING_APP_NAME }}
          
          # Spring Boot Configuration
          SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.MYSQL_DATABASE_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.MYSQL_USER }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          EOF

      - name: Update docker-compose.yml with latest image tag
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKERHUB_USER_NAME }}/${{ env.SPRING_APP_NAME }}:${{ env.SPRING_APP_VERSION }}|g" deploy/docker-compose.dev.yml

      - name: Copy files to server
        run: |
          cp -r deploy/. ${{ secrets.SERVER_DIR }}

      - name: Pull and run container
        run: |
          cd ${{ secrets.SERVER_DIR }}
          docker pull ${{ secrets.DOCKERHUB_USER_NAME }}/${{ env.SPRING_APP_NAME }}:${{ env.SPRING_APP_VERSION }}
          docker-compose -f docker-compose.dev.yml down
          docker-compose -f docker-compose.dev.yml up -d
          docker system prune -f
