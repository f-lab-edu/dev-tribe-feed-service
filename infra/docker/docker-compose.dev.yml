version: '3.8'

services:
  api:
    image: ${DOCKER_REGISTRY}/${SPRING_APP_NAME}:latest
    container_name: devtribe-feed-api-server
    restart: unless-stopped
    ports:
      - ${SERVER_PORT}:8080
      - ${MANAGE_PORT}:${MANAGE_PORT}
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_URL}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=${HIKARI_MIN_IDLE}
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=${HIKARI_MAXIMUM_POOL_SIZE}
      - SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT=${HIKARI_IDLE_TIMEOUT}
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=${HIKARI_CONNECTION_TIMEOUT}
      - SPRING_DATA_REDIS_HOST=${REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${REDIS_PORT}
    volumes:
      - ./${PINPOINT_AGENT_PATH}:/pinpoint-agent
    entrypoint: >
      java
      -javaagent:/pinpoint-agent/pinpoint-bootstrap-${PINPOINT_AGENT_VERSION}.jar
      -Dprofiler.transport.grpc.collector.ip=${PINPOINT_COLLECTOR_IP}
      -Dprofiler.collector.ip=${PINPOINT_COLLECTOR_IP}
      -Dpinpoint.agentId=${PINPOINT_AGENT_ID}
      -Dpinpoint.applicationName=${SPRING_APP_NAME}
      -Dpinpoint.profiler.profiles.active=${PINPOINT_AGENT_PROFILES}
      -jar /app/app.jar
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    # node_exporter는 host의 리소스를 모니터링하기 때문에 host 네트워크 모드를 사용
    # 기본 포트는 9100
    network_mode: host
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro